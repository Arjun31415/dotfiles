; :icon {entry["app-name"]["data"] == "Spotify" ? "../../.cache/dunst/${entry['id']['data']}.png" : (entry["icon_path"]["data"] ?: "../dunst/assets/notification/fallback-notif.png")}
            ; :body '${entry["summary"]["data"]?}\\n${entry["body"]["data"]}'

(defvar noti false)

(defwidget notification-history []
  (revealer :transition "crossfade" :duration "500ms" :reveal noti
    (scroll :class "notification-scroller" :vscroll "true"
      (box :class "notification-history" :orientation "v"
        (for entry in {mako-history}
          (notification :class 'notification'
            :title {entry.summary.data}
            :body {entry.body.data}
            :icon {entry["app-icon"]["type"]=="s" ? "./assets/${entry['app-icon']['data']}.png" : "${entry['app-icon']['data']}"}
          )
        )
      )
    )
  )
)

(defwidget notification [title body icon]
  (eventbox :onrightclick "${EWW_CMD} update noti=false;  ${EWW_CMD} close notification-history;"
    (box :class "notification" :orientation "v" :space-evenly "false"
      (box :class "notification-title"
        (label :class "notification-title-text" :halign "start" :text title)
        (box :halign "end"
          (button :class "notification-close"
            :onclick "${EWW_CMD} update noti=false; ${EWW_CMD} close notification-history;"
          "î…Œ")
        )
      )
      (box :class "notification-body" :space-evenly "false" :orientation "h"
        (box :class "notification-image" :orientation "h" :valign "center" :style "background-image: url('${icon}')")
        (box :orientation "v"
          (label :class "notification-body-text" :wrap "true" :limit-width 60 :text body)
        )
      )
    )
  )
)

